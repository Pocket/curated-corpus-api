enum CuratedStatus {
    RECOMMENDATION
    CORPUS
    DECLINE
}

enum OrderBy {
    ASC
    DESC
}

type CuratedItem {
    externalId: ID!
    url: Url!
    title: String!
    excerpt: String!
    status: CuratedStatus!
    language: String!
    imageUrl: Url
    createdAt: DateString!
    createdBy: String!
    updatedAt: DateString!
    updatedBy: String
}

type CuratedItemsResult {
    items: [CuratedItem!]!
    pagination: Pagination
}

"""
Available fields for sorting Curated Items.
"""
input CuratedItemOrderByInput {
    createdAt: OrderBy
    updatedAt: OrderBy
}

"""
Available fields for filtering CuratedItems.
"""
input CuratedItemFilterInput {
    url: Url
    title: String
    status: CuratedStatus
    language: String
}

"""
Input data for updating a Curated Item.
"""
input UpdateCuratedItemInput {
    externalId: ID!
    url: Url!
    title: String!
    excerpt: String!
    status: CuratedStatus!
    language: String!
    imageUrl: Url
}

type Query {
    """
    Retrieves a paged, sortable, filterable list of CuratedItems.
    """
    getCuratedItems(
        page: Int,
        perPage: Int,
        orderBy: CuratedItemOrderByInput,
        filters: CuratedItemFilterInput
    ): CuratedItemsResult!
}

type Mutation {
    """
    Updates a Curated Item.
    """
    updateCuratedItem(data: UpdateCuratedItemInput!): CuratedItem!
}