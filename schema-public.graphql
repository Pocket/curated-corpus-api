"""
A scheduled entry for an Item to appear on a Scheduled Surface.
For example, a story that is scheduled to appear on December 31st, 2021 on the Scheduled Surface in Firefox for the US audience.
"""
type ScheduledSurfaceItem {
    id: ID!
    
    surfaceId: ID!
    
    scheduledDate: Date!
    
    curatedItem: CuratedItem!
}

type CuratedItem {
   id: ID!

    """
    The URL of the Approved Item.
    """
    url: Url!
    """
    The title of the Approved Item.
    """
    title: String!
    """
    The excerpt of the Approved Item.
    """
    excerpt: String!
    """
    What language this item is in. This is a two-letter code, for example, 'en' for English.
    """
    language: String!
    """
    The name of the online publication that published this story.
    """
    publisher: String!
    """
    The image URL for this item's accompanying picture.
    """
    imageUrl: Url!
}

"""
The Recommendation entity is owned by the Recommendation API service.
We extend it in this service to add an extra field ('curatedItem') to the Recommendation entity.
"""
extend type Recomendation @key(fields: "curatedItem { id }") {
    """
    key field to identify the Item entity in the RecsAPI service
    """
    url: Url! @external

    """
    If the item is in our corups with metadata lets define it, this would replace the older curatedInfo object.
    """
    curatedItem: CuratedItem
}

type ScheduledSurface {
    id: ID!
    items(date: Date!): [ScheduledSurfaceItem!]!
}

type Query {
    scheduledSurface(id: ID!): ScheduledSurface!
}
