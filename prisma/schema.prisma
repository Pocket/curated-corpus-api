generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-arm64-openssl-1.1.x", "darwin"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ApprovedItemAuthor {
  externalId     String       @id @default(uuid()) @db.VarChar(255)
  name           String       @db.VarChar(255)
  approvedItemId Int
  sortOrder      Int          @default(0)
  approvedItem   ApprovedItem @relation(fields: [approvedItemId], references: [id], onDelete: Cascade)

  @@index([approvedItemId])
}

model ApprovedItem {
  id              Int                  @id @default(autoincrement())
  externalId      String               @unique @default(uuid()) @db.VarChar(255)
  url             String               @unique @db.VarChar(500)
  title           String               @db.VarChar(255)
  excerpt         String               @db.Text
  status          CuratedStatus        @default(CORPUS)
  language        String               @db.VarChar(2)
  publisher       String               @db.VarChar(255)
  imageUrl        String               @db.VarChar(500)
  topic           String?              @db.VarChar(255)
  isCollection    Boolean              @default(false)
  isSyndicated    Boolean              @default(false)
  createdAt       DateTime             @default(now())
  createdBy       String               @db.VarChar(255)
  updatedAt       DateTime             @updatedAt
  updatedBy       String?              @db.VarChar(255)
  prospectId      String?              @db.VarChar(255)
  isTimeSensitive Boolean              @default(false)
  source          CuratedItemSource?
  authors         ApprovedItemAuthor[]
  scheduledItems  ScheduledItem[]
}

model RejectedCuratedCorpusItem {
  id         Int      @id @default(autoincrement())
  externalId String   @unique @default(uuid()) @db.VarChar(255)
  url        String   @unique @db.VarChar(500)
  title      String?  @db.VarChar(255)
  topic      String?  @db.VarChar(255)
  language   String?  @db.VarChar(2)
  publisher  String?  @db.VarChar(255)
  reason     String   @db.VarChar(255)
  createdAt  DateTime @default(now())
  createdBy  String   @db.VarChar(255)
  prospectId String?  @db.VarChar(255)
}

model ScheduledItem {
  id                   Int          @id @default(autoincrement())
  externalId           String       @unique @default(uuid()) @db.VarChar(255)
  approvedItemId       Int
  createdAt            DateTime     @default(now())
  createdBy            String       @db.VarChar(255)
  updatedAt            DateTime     @updatedAt
  updatedBy            String?      @db.VarChar(255)
  scheduledDate        DateTime     @db.Date
  scheduledSurfaceGuid String       @db.VarChar(50)
  approvedItem         ApprovedItem @relation(fields: [approvedItemId], references: [id])

  @@unique([approvedItemId, scheduledSurfaceGuid, scheduledDate], name: "ItemScheduledSurfaceDate")
  @@index([scheduledSurfaceGuid])
}

enum CuratedStatus {
  RECOMMENDATION
  CORPUS
}

enum CuratedItemSource {
  PROSPECT
  MANUAL
  BACKFILL
}
